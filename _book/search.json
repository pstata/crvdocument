[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CRV Documentation",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "document.html",
    "href": "document.html",
    "title": "3  Document",
    "section": "",
    "text": "4 User Requirements"
  },
  {
    "objectID": "document.html#check-for-discrepancies-in-csr-tables-and-listing-reports.",
    "href": "document.html#check-for-discrepancies-in-csr-tables-and-listing-reports.",
    "title": "3  Document",
    "section": "3.1 Check for discrepancies in CSR tables and listing reports.",
    "text": "3.1 Check for discrepancies in CSR tables and listing reports."
  },
  {
    "objectID": "document.html#purpose-short-description-of-crv",
    "href": "document.html#purpose-short-description-of-crv",
    "title": "3  Document",
    "section": "3.2 Purpose / Short Description of CRV",
    "text": "3.2 Purpose / Short Description of CRV\nCheck for discrepancies in CSR tables and listing reports."
  },
  {
    "objectID": "document.html#program-tool-macro-parameters",
    "href": "document.html#program-tool-macro-parameters",
    "title": "3  Document",
    "section": "4.1 Program / Tool / Macro Parameters",
    "text": "4.1 Program / Tool / Macro Parameters\nThe options for CRV_CHECK are provided to the macro through parameters. For a specification of the possible parameters and values for the options, refer to the following table. The effect and possible values of the options are described in the respective specifications below. Note that if any of the required parameters is not used appropriately, the macro will terminate with an error message.\n\n\n\nParameter\nDefault\nDescription\n\n\n\n\nLIB\nTLFMETA\nLibrary reference pointing to %datalist metadata\n\n\nMETADATA\nMETA\nMetadata dataset(s) for stored %datalist metadata\n\n\nCHECK1\nY\nCheck for reports with undefined titles\n\n\nCHECK2:\nY\nCheck for missing footnote references\n\n\nCHECK3:\nY\nCheck for duplicate records in reports\n\n\nCHECK4:\nY\nCheck report creation dates\n\n\nCHECK5:\nY\nCompare program file names against NAME parameter in %iniprog call\n\n\nCHECK6:\nY\nCheck for empty reports\n\n\nCHECK7:\nY\nCheck for missing %iniprog and/or %endprog calls\n\n\nCHECK8:\nY\nCheck SAS log files\n\n\nCHECK9:\nY\nCheck AE reports for discrepancies\n\n\nCHECK10:\nY\nCheck Big N within each population group\n\n\nCHECK11:\nY\nCheck for hardcoded libnames and formats\n\n\nCHECK12:\nY\nCheck for reprots with invalid values\n\n\nCHECKX:\nN\nRun study specific check(s)\n\n\nREPORT_TYPE\nHTML\nStore the result files in RTF or HTML (default)  format, or ALL to produce both files\n\n\nCOLORS\n#ff4d4d|#dbb43d\nColor to use for flagged records in reports\n1st color in the list is used for the failed checks.\n2nd color in the list is used for the TBD checks.\n\n\nKEYWORD\nUNIDENTIFIED\nOptional text string to identify missing titles\n\n\nFIRSTOBS\n1\nUsed to limit the number of reports to check. It specifies first observation to process.\n\n\nOBS\nMAX\nSpecifies the last observation to process.\n\n\nSEARCH_COLUMN_HEADER\nTotal\nSelect a column header to search\n\n\nTIMING_WINDOW\n21600\nAllowed time interval between report creation dates, in seconds; the default is 6 hours\n\n\nFILEFILTER\n.*\nFilter for file names to include in validation report; must be a valid regular expression\n\n\nHELP\nN\nDisplay the CRV help messages\n\n\nVERBOSE\nN\nPrint additional information into SAS log\n\n\n\n\n4.1.1 LIB\nThis is the SAS library reference points to the location of %datalist metadata directory. Refer to %startMostoMetadata documentation for instruction on how to create one. Following diagram is an overview of how metadata is created:\n\n\n4.1.2 METADATA\nThis is the SAS dataset, or list of SAS datasets, in LIB library that contain the list of reports with the associated %datalist parameters used to create them. The default value of “META:”, for example, includes all dataset names beginning with “META”.\n\n\n4.1.3 CHECK1\nCheck for reports with undefined titles:\nA report is considered having an undefined title if TITLE1 is missing or contains &KEYWORD. The default for the parameter KEYWORD is “UNIDENTIFIED”.\nSample Detail check for reports with undefined titles:\n\n\n\n4.1.4 CHECK2:\nCheck for missing footnote references\nThe search for possible footnote related issues includes the following:\n·         Column references without a matching footnote\n·         Row references without a matching footnote\n·         Row header reference without a matching footnote\n·         Value reference without a matching footnote\n·         Footnote without the corresponding reference \nRefer to Appendix B:  for detail. \n\n\n4.1.5 CHECK3:\nCheck for duplicate records in reports\nThis is about identifying duplicate rows in the reports.\nRefer to [APPENDIX C:] for detail.\n\n\n4.1.6 CHECK4:\nCheck report creation dates\nIf the gap between report creation date and that of the most recent report is greater than &TIMING_WINDOW seconds, the report is flagged.\nSample report:\n\n\n\n4.1.7 CHECK5:\nCompare program file names against NAME parameter in %iniprog call\nThe report is flagged if NAME parameter in %iniprog call does not match the file name.\nSample report:\n\n\n\n4.1.8 CHECK6:\nCheck for empty reports\nAll reports that contain no data are flagged.\nSample report:\n\n\n\n4.1.9 CHECK7:\nCheck for missing %iniprog and/or %endprog calls\nSAS programs are scanned for presence of %iniprog and %endprog calls. Reports that do not contain either of them are flagged.\nFor Example:\n\nNote: ACL Owner column indicates the Unix ownership of the file. It is the output of the “ls –la” command.\nColumns Purpose, Author, Last Changed By, and Validation Level are the text retrieved from the program’s header.  \n\n\n4.1.10 CHECK8:\nCheck SAS log files\nSAS log files are scanned for presence of ERRORs, WARNINGs and critical NOTEs. Reports are flagged if any such lines are detected.\nSample Report:\n\n\n\n4.1.11 CHECK9:\nCheck AE reports for discrepancies\nCheck numbers among AE Summary, Overall and Listing reports.\nAE reports are grouped to the following categories:  \nPopulation Set: safety analysis set, full analysis set, intent-to-treat, per-protocol,….\nTiming Method:_all_, Treatment Emergent, Cutoff, After, Before, Between, Phase, Pre/Post treatment, Page Title\nScope:  Any AE, SAE, Severe, Related, SAE, Discontinuation, non-Serious\nDictionary:MedDRA, CTCAE,  MedDRA/CTCAE, not specific is default to MedDRA\nReported numbers between each group has to match.\n\n\n\n\n4.1.12 CHECK10:\nCheck Big N within each population group\nCheck reports for discrepancies in reporting Big N for various populations.  Reports that their Big N do not match within a population are flagged.\nSample HTML detail report using SAS 9.4:\n\n\n\n4.1.13 CHECK11:\nCheck for hardcoded libnames and formats\nCheck for hardcoded libnames and formats. SAS programs are scanned for presence of LIBNAME and PROC FORMAT words. Reports that contain either of them are flagged.\nSample HTML detail report using SAS 9.4:\n\n\n\n4.1.14 CHECK12:\nCheck for reports with invalid values\nCheck for reports with invalid values.\nFor example:\n            1. Check for UNCODED! fields.\n            2. in case Taiwan is used in a Table, the following two checks are applied:             a.) If Country is used, it should always be “Country / Region”. This is also required for all titles       and footnotes.\n            b.) In no case the term “Province of China” should be used in combination with Taiwan\n            Both checks are required to ensure we apply to all requirements for submissions in China and Taiwan.\n            3. Check for reports with invalid value of “&”.\nSample HTML summary report using SAS 9.4:\n\n\n\n4.1.15 CHECKX:\nRun study specific checks\nThe default for this parameter is NO. When it is changed to YES, macro %CRV_CheckX0 is executed if it is defined. The macro is expected to contain study-specific checks.\n\n\n4.1.16 REPORT_TYPE\nThis parameter determines whether the output is stored in HTML or RTF formats, or both if it is set to ALL (default).\n\n\n4.1.17 FILEFILTER\nThis parameter defines a regular expression to subset specific reports. The default is “.*”, which selects every existing report.\n\n\n4.1.18 COLORS\nThis parameter defines the colors used for flagged records in the reports. The default is set to Orange|Yellow.\n1st color in the list used for the failed checks. 2nd color in the list is used for the TBD checks. \n\n\n4.1.19 KEYWORD\nOptional text string to identify missing titles. A report is considered having an undefined title if TITLE1 is missing or contains &KEYWORD. The default for the parameter KEYWORD is “UNIDENTIFIED”.\n\n\n4.1.20 FIRSTOBS\nIt is used to limit the number of reports to check.  Because of memory issue, we may need to limit the number of reports to check. It specifies the first observation to process.\n\n\n4.1.21 OBS\nIt specifies the last observation to process. When FIRSTOBS is not also used, this corresponds to the number of observations that will be read. The default value is set to Max.\nFollowing is an example of selecting only the 5000 reports:\n%crv_check(obs=5000)\n\n\n4.1.22 SEARCH_COLUMN_HEADER\nThis parameter defines a column header to search. The default is “Total”, which select columns with the header of “Total”.\n\n\n4.1.23 TIMING_WINDOW\nThis parameter sets maximal time span, in seconds, allowed between individual reports. The default value is 21600, which is an equivalent of 6 hours.\n\n\n4.1.24 HELP\nThe default for this parameter is NO. When it is changed to YES, help text is printed to the SAS log.\n\n\n4.1.25 VERBOSE\nThe default for this parameter is NO. When it is changed to YES, general messages (including starting and finishing information) are printed to the SAS log. With the default setting, only ERROR and WARNING messages are printed.\n\n\n4.1.26 Checks and Error Handling\nThe following checks and error handlings are performed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nType of check\nObject\nDescriptions\nMessage / Reaction\n\n\n\n\n\n\n\n\nFORMAL\nLIB\nMust be a valid existing library\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nMETADATA\nMust be existing dataset(s) (also in combination with INLIB if provided)\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nLIB METADATA\nLIB and METADATA must not be both missing\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nREPORT_TYPE\nMust use HTM, RTF or ALL\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nCHECK1-CHECK12\nMust either be N(O) or Y(ES)\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nCHECKX\nMust either be N(O) or Y(ES)\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nFIRSTOBS\nMust be a valid integer number. Cannot be empty.\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nOBS\nMust be a valid integer number. Cannot be empty.\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nTIMING_FLAG\nMust be a NUMERIC\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nHELP\nMust either be N(O) or Y(ES)\nAbort with an error message\n\n\n\n\n\n\n\n\nFORMAL\nVERBOSE\nMust either be N(O) or Y(ES)\nAbort with an error message\n\n\n\n\n\n\n\n\n\n\n\n4.1.27 Processing Steps\nCRV_check macro relies on the datalist metadata to identify discrepancies in the tables and reports.  To create  datalist metadata for a study, add the following lines to your run_all.sas program:\n%initsystems(initstudy=5)\n%initstudy(…….)\n%startMostoMetadata()\n\n\n4.1.28 Output Generation\nBased on the REPORT_TYPE parameter, CRV_Check macro generates an .HTM and/or a .RTF file(s) that includes the results from all the checks.\nExample:\nClicking of the “Obs” number, detail report of the selected check will be displayed. Clicking on the “Status” column, summary report of the selected check will be displayed.  \n\nTo generate the above report, run the %crv_check macro at the end of your run_all.sas program.\nOr, you may also want to create a separate run_crv file to generate the report.\nFor example:\n%initsystems(initstudy=5, spro=3, crv=2)\n%initstudy()\n%crv_check;\n\n\n4.1.29 Status\nStatus field has the following options: Passed, Failed and TBD (To-Be-Determined).\n•       Passed: I know the values are correct.\n•       Failed: I know the values are incorrect.\n•       TBD: I don’t know if the values are correct.\nFor some checks, by checking, I know that the values are correct or not. Passed or Failed.  Checks like looking for missing titles. Titles are there or not? Yes or No\nSome checks like check#3, find duplicate records, it totally depends on the report.  You can easily find duplicate records in the demography report.  But in the death report, you don’t want to find duplicates.\nTBD is for those cases where the program cannot figure whether something is correct or not, so they need to be checked visually.\nFollowing is a list of valid status values for each check:\n\nDefault colors associated with status values are:\n\nWithin the CRV reports, there are default colors associated with these values: Yellow for “TBD”, Orange for “Failed”, default SAS background color for “Passed”. When running CRV in SAS 9.2, default background color is “Gray”. Running it with SAS 9.4, default background color is “White”.\nYou can change these default colors with the use of CRV macro parameter.\n\n\n4.1.30 Constraints\nIf your study has multiple runall programs, and you want to run them all at the same time, you need to specify a unique metadat parameter for the %startMostoMetadata macro.\nFor Example:\n%startmostometadata(metadat=tlfmeta.META_Section14);\n%startmostometadata(metadat=tlfmeta.META_Section16);\n\n\n4.1.31 %DocumentFinish\nFollowing are the steps for storing the crv_check findings to a MS-Word document:\n1.     Copy the\n\\\\by-sas2p.bayer-ag.com\\patdb\\std_sg\\stat\\systems\\crv\\doc\\crv2\\template_crv_check.doc file to your study .pgm directory.\n2.     Update the template_crv.doc header information.\n3.     Add the following line to your runall program:\n%DocumentFinish(template=template_CRV_check.doc, tmpldir=&prgdir, _outdir=&outdir, ResultPrefix= )\nSample CRV_Check.doc file:\n\n\n\n4.1.32 3.Appendix A:\noverall report structure\nFollowing is the overall structure of the html file generated by the CRV_CHECK:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n               Table of Contents\n\n\n\n\n               Summary Section\n\n\n\n\n               Detail Section\n\n\n\n\n               Check Specific\n\n\n\n\n\n\n\n\nFollowing is the overall structure of the .Rtf file generated by the CRV_CHECK:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n               Table of Contents\n\n\n\n\n               Summary Section\n\n\n\n\n\n\n\n\n\n\n4.1.33 Appendix B:\nExamples of footnote reference issues\nFollowing is a sample summary report that shows reports with a number of duplicate records.\nFor example, in the first row, it shows we have three duplicate AE records.\nClicking on the number 3 in the duplicate records column will display the duplicate records.  \nExample of checking for duplicate records in a report: \n\n\nBy clicking on the report name on the last line, it will take you to the report.\n\nFollowing is the snapshot of the actual report, with its duplicate records.\n\nWhen running a check against a study that includes the above report, this discrepancy will be identified.  \nFirst row in the following summary report shows there are three duplicate AE records. Clicking on the number “3” in the duplicate records column will display the three duplicate records.\n\nFollowing report indicates three separate duplicate records in the AE listing. \nClicking on the report name on the last line will display the actual report."
  }
]